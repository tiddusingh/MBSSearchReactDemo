{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\MBSSearchReact\\\\mbs-search-app\\\\src\\\\components\\\\FacetFilters.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './FacetFilters.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FacetFilters = ({\n  facets,\n  selectedFacets,\n  onFacetChange\n}) => {\n  _s();\n  const [expandedSections, setExpandedSections] = useState({\n    CategoryDescription: true,\n    GroupDescription: true,\n    SubgroupDescription: false,\n    ItemType: false,\n    IsSpecialistItem: false\n  });\n\n  // Display names for facets\n  const facetDisplayNames = {\n    CategoryDescription: 'Category',\n    GroupDescription: 'Group',\n    SubgroupDescription: 'Subgroup',\n    ItemType: 'Item Type',\n    IsSpecialistItem: 'Specialist Item'\n  };\n\n  // No facets to display\n  if (!facets || Object.keys(facets).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"facet-filters empty\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No filters available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n  const toggleSection = section => {\n    setExpandedSections(prev => ({\n      ...prev,\n      [section]: !prev[section]\n    }));\n  };\n  const handleCheckboxChange = (facetName, value) => {\n    const currentValues = selectedFacets[facetName] || [];\n    let newValues;\n    if (currentValues.includes(value)) {\n      // Remove the value if it's already selected\n      newValues = currentValues.filter(v => v !== value);\n    } else {\n      // Add the value if it's not selected\n      newValues = [...currentValues, value];\n    }\n    onFacetChange(facetName, newValues);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"facet-filters\",\n    children: Object.entries(facets).map(([facetName, facetValues]) => {\n      // Skip empty facets\n      if (!facetValues || facetValues.length === 0) return null;\n      const isExpanded = expandedSections[facetName];\n      const displayName = facetDisplayNames[facetName] || facetName;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"facet-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"facet-header\",\n          onClick: () => toggleSection(facetName),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"facet-title\",\n            children: [displayName, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"facet-count\",\n              children: facetValues.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `facet-toggle ${isExpanded ? 'expanded' : ''}`,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"16\",\n              height: \"16\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              children: /*#__PURE__*/_jsxDEV(\"polyline\", {\n                points: \"6 9 12 15 18 9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `facet-content ${isExpanded ? 'expanded' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"facet-list\",\n            children: facetValues.map(facet => {\n              var _selectedFacets$facet;\n              const isSelected = (_selectedFacets$facet = selectedFacets[facetName]) === null || _selectedFacets$facet === void 0 ? void 0 : _selectedFacets$facet.includes(facet.value);\n\n              // Handle special cases for boolean facets\n              let displayValue = facet.value;\n              if (facetName === 'IsSpecialistItem') {\n                displayValue = facet.value === 'true' ? 'Yes' : 'No';\n              }\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"facet-item\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"facet-checkbox\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: isSelected,\n                    onChange: () => handleCheckboxChange(facetName, facet.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"facet-label\",\n                    children: displayValue\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"facet-value-count\",\n                    children: facet.count\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 23\n                }, this)\n              }, facet.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, facetName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(FacetFilters, \"sOgMWHDUaVZFyxtHvn271PePIDQ=\");\n_c = FacetFilters;\nvar _c;\n$RefreshReg$(_c, \"FacetFilters\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FacetFilters","facets","selectedFacets","onFacetChange","_s","expandedSections","setExpandedSections","CategoryDescription","GroupDescription","SubgroupDescription","ItemType","IsSpecialistItem","facetDisplayNames","Object","keys","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toggleSection","section","prev","handleCheckboxChange","facetName","value","currentValues","newValues","includes","filter","v","entries","map","facetValues","isExpanded","displayName","onClick","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","facet","_selectedFacets$facet","isSelected","displayValue","type","checked","onChange","count","_c","$RefreshReg$"],"sources":["C:/Projects/MBSSearchReact/mbs-search-app/src/components/FacetFilters.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './FacetFilters.css';\n\nexport const FacetFilters = ({ facets, selectedFacets, onFacetChange }) => {\n  const [expandedSections, setExpandedSections] = useState({\n    CategoryDescription: true,\n    GroupDescription: true,\n    SubgroupDescription: false,\n    ItemType: false,\n    IsSpecialistItem: false\n  });\n  \n  // Display names for facets\n  const facetDisplayNames = {\n    CategoryDescription: 'Category',\n    GroupDescription: 'Group',\n    SubgroupDescription: 'Subgroup',\n    ItemType: 'Item Type',\n    IsSpecialistItem: 'Specialist Item'\n  };\n  \n  // No facets to display\n  if (!facets || Object.keys(facets).length === 0) {\n    return (\n      <div className=\"facet-filters empty\">\n        <p>No filters available</p>\n      </div>\n    );\n  }\n  \n  const toggleSection = (section) => {\n    setExpandedSections(prev => ({\n      ...prev,\n      [section]: !prev[section]\n    }));\n  };\n  \n  const handleCheckboxChange = (facetName, value) => {\n    const currentValues = selectedFacets[facetName] || [];\n    let newValues;\n    \n    if (currentValues.includes(value)) {\n      // Remove the value if it's already selected\n      newValues = currentValues.filter(v => v !== value);\n    } else {\n      // Add the value if it's not selected\n      newValues = [...currentValues, value];\n    }\n    \n    onFacetChange(facetName, newValues);\n  };\n  \n  return (\n    <div className=\"facet-filters\">\n      {Object.entries(facets).map(([facetName, facetValues]) => {\n        // Skip empty facets\n        if (!facetValues || facetValues.length === 0) return null;\n        \n        const isExpanded = expandedSections[facetName];\n        const displayName = facetDisplayNames[facetName] || facetName;\n        \n        return (\n          <div className=\"facet-section\" key={facetName}>\n            <div \n              className=\"facet-header\" \n              onClick={() => toggleSection(facetName)}\n            >\n              <div className=\"facet-title\">\n                {displayName}\n                <span className=\"facet-count\">{facetValues.length}</span>\n              </div>\n              <div className={`facet-toggle ${isExpanded ? 'expanded' : ''}`}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <polyline points=\"6 9 12 15 18 9\"></polyline>\n                </svg>\n              </div>\n            </div>\n            \n            <div className={`facet-content ${isExpanded ? 'expanded' : ''}`}>\n              <ul className=\"facet-list\">\n                {facetValues.map((facet) => {\n                  const isSelected = selectedFacets[facetName]?.includes(facet.value);\n                  \n                  // Handle special cases for boolean facets\n                  let displayValue = facet.value;\n                  if (facetName === 'IsSpecialistItem') {\n                    displayValue = facet.value === 'true' ? 'Yes' : 'No';\n                  }\n                  \n                  return (\n                    <li className=\"facet-item\" key={facet.value}>\n                      <label className=\"facet-checkbox\">\n                        <input\n                          type=\"checkbox\"\n                          checked={isSelected}\n                          onChange={() => handleCheckboxChange(facetName, facet.value)}\n                        />\n                        <span className=\"facet-label\">{displayValue}</span>\n                        <span className=\"facet-value-count\">{facet.count}</span>\n                      </label>\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}