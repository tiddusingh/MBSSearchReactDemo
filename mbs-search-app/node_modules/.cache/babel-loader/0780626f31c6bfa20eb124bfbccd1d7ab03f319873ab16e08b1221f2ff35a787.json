{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\MBSSearchReact\\\\mbs-search-app\\\\src\\\\components\\\\FacetFilters.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './FacetFilters.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FacetFilters = ({\n  facets,\n  selectedFacets,\n  onFacetChange,\n  formatFacetName\n}) => {\n  _s();\n  const [expandedSections, setExpandedSections] = useState({});\n\n  // Toggle section expansion\n  const toggleSection = facetName => {\n    setExpandedSections(prev => ({\n      ...prev,\n      [facetName]: !prev[facetName]\n    }));\n  };\n\n  // Check if a section should be expanded by default\n  const isSectionExpanded = facetName => {\n    var _selectedFacets$facet;\n    // If explicitly set in state, use that value\n    if (expandedSections[facetName] !== undefined) {\n      return expandedSections[facetName];\n    }\n\n    // Default: expand if any value in this facet is selected\n    return ((_selectedFacets$facet = selectedFacets[facetName]) === null || _selectedFacets$facet === void 0 ? void 0 : _selectedFacets$facet.length) > 0;\n  };\n\n  // If no facets, return null\n  if (!facets || Object.keys(facets).length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"facet-filters\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"filters-heading\",\n      children: \"Refine Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), Object.entries(facets).map(([facetName, facetData]) => {\n      var _selectedFacets$facet2;\n      if (!facetData || !Array.isArray(facetData)) {\n        return null; // Skip if facetData is not valid\n      }\n      const isExpanded = isSectionExpanded(facetName);\n      const hasSelectedValues = ((_selectedFacets$facet2 = selectedFacets[facetName]) === null || _selectedFacets$facet2 === void 0 ? void 0 : _selectedFacets$facet2.length) > 0;\n      const displayName = formatFacetName ? formatFacetName(facetName) : facetName;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `facet-section ${hasSelectedValues ? 'has-selected' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"facet-header\",\n          onClick: () => toggleSection(facetName),\n          \"aria-expanded\": isExpanded,\n          \"aria-controls\": `facet-values-${facetName}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"facet-title\",\n            children: displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"facet-toggle\",\n            children: isExpanded ? /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"16\",\n              height: \"16\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M18 15L12 9L6 15\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"16\",\n              height: \"16\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M6 9L12 15L18 9\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `facet-values-${facetName}`,\n          className: `facet-values ${isExpanded ? 'expanded' : ''}`,\n          children: Array.isArray(facetData.values) && facetData.values.map((facet, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"facet-value\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `facet-value-button ${facet.selected ? 'selected' : ''}`,\n              onClick: () => onFacetChange(facetName, facet.value, !facet.selected),\n              \"aria-pressed\": facet.selected,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"facet-label\",\n                children: [facet.displayValue || facet.value, /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"facet-count\",\n                  children: [\"(\", facet.count, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this), facet.selected && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"selected-indicator\",\n                \"aria-hidden\": \"true\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  width: \"12\",\n                  height: \"12\",\n                  viewBox: \"0 0 24 24\",\n                  fill: \"none\",\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M20 6L9 17L4 12\",\n                    stroke: \"currentColor\",\n                    strokeWidth: \"3\",\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this)\n          }, `${facetName}-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, facetName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(FacetFilters, \"MuXrzuXOkBisxDgI2dpYJH0j/AI=\");\n_c = FacetFilters;\nvar _c;\n$RefreshReg$(_c, \"FacetFilters\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FacetFilters","facets","selectedFacets","onFacetChange","formatFacetName","_s","expandedSections","setExpandedSections","toggleSection","facetName","prev","isSectionExpanded","_selectedFacets$facet","undefined","length","Object","keys","className","children","fileName","_jsxFileName","lineNumber","columnNumber","entries","map","facetData","_selectedFacets$facet2","Array","isArray","isExpanded","hasSelectedValues","displayName","onClick","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","id","values","facet","index","selected","value","displayValue","count","_c","$RefreshReg$"],"sources":["C:/Projects/MBSSearchReact/mbs-search-app/src/components/FacetFilters.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './FacetFilters.css';\n\nexport const FacetFilters = ({ facets, selectedFacets, onFacetChange, formatFacetName }) => {\n  const [expandedSections, setExpandedSections] = useState({});\n\n  // Toggle section expansion\n  const toggleSection = (facetName) => {\n    setExpandedSections(prev => ({\n      ...prev,\n      [facetName]: !prev[facetName]\n    }));\n  };\n\n  // Check if a section should be expanded by default\n  const isSectionExpanded = (facetName) => {\n    // If explicitly set in state, use that value\n    if (expandedSections[facetName] !== undefined) {\n      return expandedSections[facetName];\n    }\n    \n    // Default: expand if any value in this facet is selected\n    return selectedFacets[facetName]?.length > 0;\n  };\n\n  // If no facets, return null\n  if (!facets || Object.keys(facets).length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"facet-filters\">\n      <h2 className=\"filters-heading\">Refine Results</h2>\n      \n      {Object.entries(facets).map(([facetName, facetData]) => {\n        if (!facetData || !Array.isArray(facetData)) {\n          return null; // Skip if facetData is not valid\n        }\n\n        const isExpanded = isSectionExpanded(facetName);\n        const hasSelectedValues = selectedFacets[facetName]?.length > 0;\n        const displayName = formatFacetName ? formatFacetName(facetName) : facetName;\n        \n        return (\n          <div key={facetName} className={`facet-section ${hasSelectedValues ? 'has-selected' : ''}`}>\n            <button \n              className=\"facet-header\"\n              onClick={() => toggleSection(facetName)}\n              aria-expanded={isExpanded}\n              aria-controls={`facet-values-${facetName}`}\n            >\n              <span className=\"facet-title\">{displayName}</span>\n              <span className=\"facet-toggle\">\n                {isExpanded ? (\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M18 15L12 9L6 15\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  </svg>\n                ) : (\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M6 9L12 15L18 9\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  </svg>\n                )}\n              </span>\n            </button>\n            \n            <div \n              id={`facet-values-${facetName}`}\n              className={`facet-values ${isExpanded ? 'expanded' : ''}`}\n            >\n              {Array.isArray(facetData.values) && facetData.values.map((facet, index) => (\n                <div key={`${facetName}-${index}`} className=\"facet-value\">\n                  <button\n                    className={`facet-value-button ${facet.selected ? 'selected' : ''}`}\n                    onClick={() => onFacetChange(facetName, facet.value, !facet.selected)}\n                    aria-pressed={facet.selected}\n                  >\n                    <span className=\"facet-label\">\n                      {facet.displayValue || facet.value}\n                      <span className=\"facet-count\">({facet.count})</span>\n                    </span>\n                    {facet.selected && (\n                      <span className=\"selected-indicator\" aria-hidden=\"true\">\n                        <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                          <path d=\"M20 6L9 17L4 12\" stroke=\"currentColor\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                        </svg>\n                      </span>\n                    )}\n                  </button>\n                </div>\n              ))}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}